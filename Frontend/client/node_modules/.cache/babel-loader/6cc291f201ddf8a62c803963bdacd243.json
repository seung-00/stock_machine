{"ast":null,"code":"var _jsxFileName = \"/root/StockNews/Frontend/client/src/SearchPage/component/SearchInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Input } from 'antd';\nimport axios from 'axios';\nconst {\n  Search\n} = Input;\n\nfunction SearchInput({\n  SetLoading,\n  SetPrediction\n}) {\n  const [keyword, SetKeyword] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      // console.log(`keyword => ${keyword}`);\n      try {\n        const response = await axios.get(`api/prediction?company=${keyword}`); // console.log(`response, reponse.data, prediction`);\n        // console.log(response, response.data, response.data[0]);\n\n        if (!response.data.length) {\n          if (keyword) {\n            throw \"search fail\";\n          }\n\n          return;\n        }\n\n        SetPrediction(response.data[0]);\n        SetLoading(true);\n      } catch (msg) {\n        alert(msg);\n      }\n    };\n\n    fetchData();\n  }, [keyword]);\n\n  const onSearch = value => {\n    if (!value) {\n      return;\n    }\n\n    SetKeyword(value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"\\uCC3E\\uACE0\\uC790 \\uD558\\uB294 \\uAE30\\uC5C5\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n    style: {\n      width: `100%`,\n      margin: 0\n    },\n    size: \"large\",\n    enterButton: true,\n    onSearch: onSearch,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default SearchInput;","map":{"version":3,"sources":["/root/StockNews/Frontend/client/src/SearchPage/component/SearchInput.js"],"names":["React","useState","useEffect","Input","axios","Search","SearchInput","SetLoading","SetPrediction","keyword","SetKeyword","fetchData","response","get","data","length","msg","alert","onSearch","value","width","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,KAAnB;;AAGA,SAASG,WAAT,CAAqB;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAArB,EAAkD;AAC9C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,YAAY;AAC1B;AACA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,0BAAyBJ,OAAQ,EAA5C,CAAvB,CADA,CAEA;AACA;;AACA,YAAI,CAACG,QAAQ,CAACE,IAAT,CAAcC,MAAnB,EAA2B;AACvB,cAAGN,OAAH,EAAY;AACR,kBAAM,aAAN;AACH;;AACD;AACH;;AACDD,QAAAA,aAAa,CAACI,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAD,CAAb;AACAP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH,OAZD,CAYE,OAAOS,GAAP,EAAY;AACVC,QAAAA,KAAK,CAACD,GAAD,CAAL;AACH;AACJ,KAjBD;;AAkBAL,IAAAA,SAAS;AACZ,GApBQ,EAoBN,CAACF,OAAD,CApBM,CAAT;;AAuBA,QAAMS,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAG,CAACA,KAAJ,EAAW;AACP;AACH;;AACDT,IAAAA,UAAU,CAACS,KAAD,CAAV;AACH,GALD;;AAMA,sBACI,uDACI,oBAAC,MAAD;AACI,IAAA,WAAW,EAAC,0FADhB;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAG,MAAV;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAFX;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,WAAW,MAJf;AAKI,IAAA,QAAQ,EAAEH,QALd;AAMI,IAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAYH;;AAED,eAAeZ,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Input } from 'antd';\nimport axios from 'axios';\n\nconst { Search } = Input;\n\n\nfunction SearchInput({SetLoading, SetPrediction}) {\n    const [keyword, SetKeyword] = useState(null);\n    useEffect(() => {\n        const fetchData = async () => {\n            // console.log(`keyword => ${keyword}`);\n            try {\n                const response = await axios.get(`api/prediction?company=${keyword}`);\n                // console.log(`response, reponse.data, prediction`);\n                // console.log(response, response.data, response.data[0]);\n                if (!response.data.length) {\n                    if(keyword) {\n                        throw \"search fail\"\n                    }\n                    return\n                }\n                SetPrediction(response.data[0]);\n                SetLoading(true);\n            } catch (msg) {\n                alert(msg);\n            }\n        };\n        fetchData();\n    }, [keyword])\n\n\n    const onSearch = (value) => {\n        if(!value) {\n            return;\n        }\n        SetKeyword(value);\n    }\n    return (\n        <>\n            <Search\n                placeholder=\"찾고자 하는 기업명을 입력하세요.\"\n                style={{ width: `100%`, margin: 0 }}\n                size=\"large\"\n                enterButton\n                onSearch={onSearch}\n                autoFocus\n            />\n        </>\n    )\n}\n\nexport default SearchInput;"]},"metadata":{},"sourceType":"module"}